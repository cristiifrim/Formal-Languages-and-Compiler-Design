The words - predefined tokens are specified between " and ":

program ::= decllist ";" cmpdstmt

decllist ::= declaration | declaration ";" decllist

declaration ::= typeIDENTIFIER

type1 ::= "#" | "$" 

arraydecl ::= type1"<"nr">"

type  ::= type1|arraydecl

cmpdstmt ::= ":" stmtlist ";" | 

stmtlist ::= stmt | stmt ";" stmtlist

stmt ::= simplstmt | structstmt

simplstmt ::= assignstmt | iostmt

assignstmt ::= declaration "=" expression | arrayassignstmt

arrayassignstmt ::= "("expression"," expression"," ..."," .."," expression")"

arrayindexing ::= type1IDENTIFIER"["expression"]"

expression ::= expression "+" term | expression "&" term | expression "|" term | expression "^" term | term

term ::= term "*" factor | factor

factor ::= "("expression")" | declaration

iostmt ::= "INPUT" | "OUTPUT" "("declaration" | expression)" 

structstmt ::= cmpdstmt | ifstmt | whilestmt | forstmt

ifstmt ::= "IF" condition "THEN" stmt ["ELSE" stmt] "ENDIF"

whilestmt ::= "WHILE" condition "EXECUTE" stmt "ENDLOOP"

forstmt ::= "FOR" declaration "TO" expression "EXECUTE" stmt "ENDFOR"

condition ::= expression RELATION expression

RELATION ::= "<" | "<=" | "equals" | "#" | ">=" | ">" | 